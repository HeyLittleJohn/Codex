[tool.poetry]
name = "curator"
version = "1.1.0"
description = "Package for curating historical market data from Polygon.io to backfill into a postgres database"
authors = ["Jody Hirschi <jody@heylittlejohn.com>"]
readme = "README.md"
packages = [
    { include = "curator", from = "." },
    { include = "data_pipeline", from = "./curator" },
    { include = "db_tools", from = "./curator/" },
]

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.28.2"
types-requests = "^2.28.11.8"
aiohttp = "^3.8.4"
sentry-sdk = "^1.16.0"
uvloop = "^0.18.0"
aiomultiprocess = { path = "../aiomultiprocess", develop = true }
pandas-market-calendars = "^4.1.4"
scikit-learn = "^1.3.0"
typer = { extras = ["all"], version = "^0.9.0" }
polygon-api-client = "^1.14.2"

[tool.poetry.group.pgdb.dependencies]
pydantic = "^2.4.2"
sqlalchemy = "^2.0.0"
pandas = "^2.2.2"
psycopg = { extras = ["binary"], version = "^3.1.8" }
alembic = "^1.9.2"
# asyncpg = "^0.27.0"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0.4"
mypy = "^0.991"
black = "^24.3.0"
isort = "^5.11.4"
flake8 = "^6.0.0"
ipython = "^8.14.0"
ipykernel = "^6.26.0"
ruff = "^0.4.6"


[tool.ruff]
fix = true
line-length = 112
ignore-init-module-imports = true
exclude = ["alembic"]

[tool.ruff.lint]
select = ["NPY201"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 112
include_trailing_comma = "True"
force_grid_wrap = 0
use_parentheses = "True"
combine_as_imports = "True"
force_alphabetical_sort_within_sections = "True"
ensure_newline_before_comments = "True"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
lines_after_imports = 2

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
